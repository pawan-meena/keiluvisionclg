C51 COMPILER V9.60.0.0   EXP_9                                                             05/10/2022 14:41:16 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EXP_9
OBJECT MODULE PLACED IN .\Objects\exp-9.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.exe exp-9.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\exp
                    --9.lst) TABS(2) OBJECT(.\Objects\exp-9.obj)

line level    source

   1          #include<reg51.h>
   2          void DispChar(unsigned char ch);
   3          void ClrLED();
   4          unsigned char getkey();
   5          unsigned char getnum();
   6          unsigned char getOp();
   7          sbit Clk = P3^4;
   8          sbit Dat = P0^0;
   9          int main()
  10          {
  11   1        unsigned char temp=0x0ff,n1=0,n2,Op,Res;
  12   1        unsigned char NumTab[10]={0x0c0,0x0f9,0x0a4,0xb0,0x99,0x92,0x82,0x0f8,0x80,0x90};
  13   1        unsigned char OpTab[4]={0x88,0x0fb,0xc8,0x0a1};
  14   1        bit Neg=0;
  15   1        ClrLED();
  16   1        while(1)
  17   1        {
  18   2          Neg=0;
  19   2            n1=getnum();
  20   2          Op=getOp()-0x0B;
  21   2          n2= getnum();
  22   2        while(getkey()!=0x13);
  23   2        ClrLED();
  24   2        switch(Op){
  25   3          case 0: 
  26   3            Res= n1+n2;
  27   3            break;
  28   3          case 1:
  29   3            if(n2>n1){
  30   4              Neg =1;
  31   4              Res = n2-n1;
  32   4              break;
  33   4            
  34   4            }
  35   3            Res = n1-n2;
  36   3            break;
  37   3          case 2:
  38   3            Res = n1*n2;
  39   3            break;
  40   3          case 3:
  41   3            Res = n1/n2;
  42   3            break;
  43   3        }
  44   2        DispChar(NumTab[Res%10]);
  45   2        DispChar(NumTab[Res/10]);
  46   2        if (Neg)
  47   2          DispChar(0x0Bf);
  48   2        
  49   2       }
  50   1      }
  51          
  52          
  53          void DispChar(unsigned char ch){
  54   1        unsigned char i, tmp;
C51 COMPILER V9.60.0.0   EXP_9                                                             05/10/2022 14:41:16 PAGE 2   

  55   1        P0 =0x00;
  56   1        for(i=0;i<8;i++){
  57   2          tmp = ch&0x80;
  58   2          if(tmp)
  59   2            Dat =1;
  60   2          else
  61   2            Dat=0;
  62   2          Clk =0;
  63   2          Clk =1;
  64   2          ch= ch<<1;
  65   2        
  66   2        }
  67   1      
  68   1      }
  69          
  70          
  71          void ClrLED(){
  72   1        unsigned char i;
  73   1        for(i=0;i<4;i++)
  74   1        DispChar(0x0ff);
  75   1        
  76   1      
  77   1      }
  78              
  79            
  80            unsigned char getkey()
  81            { unsigned char i,j,indx,t;
  82   1          P2=0x00;
  83   1          P0=0xff;
  84   1          indx=0x00;
  85   1          while(1)
  86   1          { for(i=1;i<4;i<<1)
  87   2            {  P2=0x0f&-i;
  88   3              t=P0;
  89   3              t=-t;
  90   3          if(t>0)
  91   3          {
  92   4            for(j=0;j<7;j++)
  93   4            {t>>=1;
  94   5            if(t==0)
  95   5            { return(indx+j);
  96   6              }
  97   5            }
  98   4          }
  99   3          indx+=8;
 100   3        }}}
 101            unsigned char getnum()
 102            {
 103   1          unsigned char tmp;
 104   1          while(1)
 105   1          {
 106   2            tmp=getkey();
 107   2            if(tmp<0x0a || tmp==0x10)
 108   2              return(tmp);
 109   2              }}
 110            unsigned char getOp()
 111            {
 112   1          unsigned char tmp;
 113   1          while(1)
 114   1          {
 115   2            tmp=getkey();
 116   2            if((tmp>0x0a && tmp<0x0f)||tmp==0x10)
C51 COMPILER V9.60.0.0   EXP_9                                                             05/10/2022 14:41:16 PAGE 3   

 117   2              return(tmp);
 118   2          }}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    370    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
